/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

#include <queue>
#include <algorithm>

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        queue<TreeNode*> q;
        vector<vector<int> > result;
        if(root == NULL) return result;
        q.push(root);
        result.push_back({root->val});
        bool levelOdd = true;
        while(!q.empty()){
            vector<int> level;
            queue<TreeNode*> temp(q);
            while(!temp.empty()){
                TreeNode* node = temp.front();
                temp.pop();
                q.pop();
                auto l = node->left;
                auto r = node->right;
                if(l != NULL){
                    q.push(l);
                    level.push_back(l->val);
                } 
                if(r != NULL){
                    q.push(r);
                    level.push_back(r->val);
                } 
            }
            if(level.size() > 0){
                if(levelOdd) reverse(level.begin(), level.end());
                result.push_back(level);
            }
            levelOdd = !levelOdd;
        }
        return result;
    }
};
